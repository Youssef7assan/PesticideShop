@model dynamic

@{
    ViewData["Title"] = "فاتورة إلكترونية";
    Layout = null; // Remove layout for clean invoice print
    var remainingBalance = ViewData["RemainingBalance"] as decimal? ?? 0;
    var transactions = Model.Transactions as IEnumerable<dynamic>;
    var totalPurchases = transactions?.Cast<dynamic>().Sum(t => (decimal)t.TotalPrice - (decimal)t.Discount) ?? 0;
    var totalPaid = transactions?.Cast<dynamic>().Sum(t => (decimal)t.AmountPaid) ?? 0;
    var totalDiscount = transactions?.Cast<dynamic>().Sum(t => (decimal)t.Discount) ?? 0;
    var subtotal = transactions?.Cast<dynamic>().Sum(t => (decimal)t.TotalPrice) ?? 0;
    
    var entityName = Model.Name;
    var phoneNumber = Model.PhoneNumber;
    var invoiceNumber = $"INV-{DateTime.Now:yyyyMMdd}-{Model.Id:D4}";
    var orderNumber = $"ORD-{DateTime.Now:yyyyMMdd}-{Model.Id:D4}";
    var cashierName = ViewData["CashierName"] as string;
}

<!DOCTYPE html>
<html dir="rtl" lang="ar">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>فاتورة إلكترونية - @entityName</title>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Cairo', Arial, sans-serif;
            background: #f8f9fa;
            color: #333;
            line-height: 1.6;
            font-size: 14px;
        }

        .invoice-container {
            max-width: 800px;
            margin: 20px auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            overflow: hidden;
            position: relative;
        }

        .invoice-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
            position: relative;
        }

        .company-logo {
            font-size: 3rem;
            margin-bottom: 10px;
        }

        .company-name {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .company-details {
            font-size: 1rem;
            opacity: 0.9;
            line-height: 1.5;
        }

        .invoice-info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            padding: 30px;
            background: #f8f9fa;
            border-bottom: 3px solid #667eea;
        }

        .info-section h3 {
            color: #667eea;
            font-size: 1.2rem;
            margin-bottom: 15px;
            border-bottom: 2px solid #667eea;
            padding-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .info-item {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #e9ecef;
        }

        .info-item:last-child {
            border-bottom: none;
        }

        .info-label {
            font-weight: 600;
            color: #495057;
            min-width: 120px;
        }

        .info-value {
            color: #6c757d;
            font-weight: 500;
            text-align: left;
        }

        .table-header {
            background: #667eea;
            color: white;
            padding: 20px 30px;
            font-size: 1.1rem;
            font-weight: 600;
            text-align: center;
        }

        .invoice-items {
            border-collapse: collapse;
            width: 100%;
            margin: 0;
        }

        .invoice-items th {
            background: #495057;
            color: white;
            padding: 15px 8px;
            text-align: center;
        font-weight: 600;
            border-bottom: 2px solid #667eea;
            font-size: 0.95rem;
        }

        .invoice-items td {
            padding: 12px 8px;
            text-align: center;
            border-bottom: 1px solid #e9ecef;
        font-size: 0.9rem;
        }

        .invoice-items tr:nth-child(even) {
            background: #f8f9fa;
        }

        .invoice-items tr:hover {
            background: #e3f2fd;
        }

        .item-name {
            font-weight: 600;
            color: #495057;
            text-align: right !important;
            max-width: 200px;
        }

        .amount {
        font-weight: 600;
            color: #28a745;
        }

        .discount {
            color: #dc3545;
        font-weight: 600;
    }

        .invoice-summary {
            background: #f8f9fa;
            padding: 30px;
            border-top: 3px solid #667eea;
        }

        .summary-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 20px;
        }

        .summary-section h4 {
            color: #667eea;
            margin-bottom: 15px;
            font-size: 1.1rem;
            border-bottom: 2px solid #667eea;
            padding-bottom: 8px;
        }

        .summary-item {
        display: flex;
        justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #dee2e6;
        }

        .summary-item:last-child {
            border-bottom: none;
            font-size: 1.1rem;
            font-weight: bold;
            background: #e3f2fd;
            padding: 15px 10px;
        border-radius: 8px;
            margin-top: 10px;
        }

        .summary-label {
        font-weight: 600;
        color: #495057;
    }

        .summary-value {
            font-weight: 600;
        }

        .summary-value.total {
            color: #28a745;
            font-size: 1.2rem;
        }

        .summary-value.paid {
            color: #007bff;
        }

        .summary-value.debt {
            color: #dc3545;
        }

        .status-section {
            text-align: center;
            padding: 20px;
        }

        .payment-status {
            display: inline-block;
            padding: 12px 30px;
            border-radius: 25px;
            font-weight: bold;
            font-size: 1.1rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .status-paid {
            background: #d4edda;
            color: #155724;
            border: 2px solid #28a745;
        }

        .status-partial {
            background: #fff3cd;
            color: #856404;
            border: 2px solid #ffc107;
        }

        .status-unpaid {
            background: #f8d7da;
            color: #721c24;
            border: 2px solid #dc3545;
        }

        .invoice-footer {
            background: #495057;
            color: white;
            padding: 25px;
            text-align: center;
        }

        .footer-text {
            margin-bottom: 10px;
        font-size: 0.95rem;
    }

        .footer-contact {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .print-actions {
            padding: 20px;
            text-align: center;
            background: white;
            border-bottom: 1px solid #dee2e6;
        }

        .btn {
            display: inline-block;
            padding: 12px 25px;
            margin: 0 10px;
            border: none;
            border-radius: 8px;
            text-decoration: none;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
        color: white;
    }

        .btn-primary {
            background: #667eea;
        }

        .btn-primary:hover {
            background: #5a6fd8;
            transform: translateY(-2px);
        }

        .btn-success {
            background: #28a745;
        }

        .btn-success:hover {
            background: #218838;
            transform: translateY(-2px);
        }

        .btn-secondary {
            background: #6c757d;
        }

        .btn-secondary:hover {
            background: #5a6268;
            transform: translateY(-2px);
        }

        .watermark {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) rotate(-45deg);
            font-size: 4rem;
            color: rgba(102, 126, 234, 0.1);
            font-weight: bold;
            pointer-events: none;
            z-index: 0;
        }

        .invoice-number {
            background: #667eea;
            color: white;
            padding: 8px 15px;
            border-radius: 20px;
            font-weight: bold;
            display: inline-block;
            margin: 5px 0;
        }

        @@media print {
            .print-actions {
                display: none !important;
            }
            
            .invoice-container {
                box-shadow: none;
                margin: 0;
                max-width: none;
                border-radius: 0;
            }
            
            body {
                background: white;
            }
            
            .invoice-header {
                break-inside: avoid;
            }
            
            .invoice-items {
                page-break-inside: auto;
            }
            
            .invoice-items tr {
                page-break-inside: avoid;
                break-inside: avoid;
            }
        }

        @@media (max-width: 768px) {
            .invoice-info {
                grid-template-columns: 1fr;
                gap: 20px;
                padding: 20px;
            }
            
            .summary-grid {
                grid-template-columns: 1fr;
                gap: 20px;
            }
            
            .invoice-items th,
            .invoice-items td {
                padding: 6px 4px;
                font-size: 0.8rem;
            }
            
            .item-name {
                max-width: 120px;
                word-break: break-word;
            }
        }
    </style>
</head>
<body>
    <!-- Print Actions (hidden in print) -->
    <div class="print-actions">
        <button onclick="window.print()" class="btn btn-primary">
            🖨️ طباعة الفاتورة
        </button>
        <a href="/Customers/Details/@Model.Id" class="btn btn-secondary">
            ← العودة للعميل
        </a>
        <a href="javascript:void(0)" onclick="sendInvoiceViaWhatsApp()" class="btn btn-success">
            📱 إرسال عبر الواتساب
        </a>
    </div>

    <div class="invoice-container">
        <!-- Invoice Header -->
        <div class="invoice-header">
            <div class="company-logo">🌱</div>
            <div class="company-name">متجر المبيدات الزراعية</div>
            <div class="company-details">
                متخصصون في توفير أجود المبيدات والأسمدة الزراعية<br>
                📍 العنوان: شارع الزراعة، المنصورة | 📞 الهاتف: 01234567890<br>
                💻 الموقع: www.pesticides-shop.com | ✉️ البريد: info@pesticides-shop.com
            </div>
        </div>

        <!-- Invoice Information -->
        <div class="invoice-info">
            <div class="info-section">
                <h3>📄 معلومات الفاتورة</h3>
                <div class="info-item">
                    <span class="info-label">رقم الفاتورة:</span>
                    <span class="info-value invoice-number">@invoiceNumber</span>
                </div>
                <div class="info-item">
                    <span class="info-label">رقم الطلب:</span>
                    <span class="info-value invoice-number">@orderNumber</span>
                </div>
                <div class="info-item">
                    <span class="info-label">تاريخ الإصدار:</span>
                    <span class="info-value">@DateTime.Now.ToString("dd/MM/yyyy")</span>
                </div>
                <div class="info-item">
                    <span class="info-label">وقت الإصدار:</span>
                    <span class="info-value">@DateTime.Now.ToString("HH:mm")</span>
                </div>
                <!-- Debug: CashierName = '@cashierName' -->
                @if (!string.IsNullOrEmpty(cashierName))
                {
                    <div class="info-item">
                        <span class="info-label">اسم الكاشير:</span>
                        <span class="info-value">@cashierName</span>
                    </div>
                }
                else
                {
                    <div class="info-item">
                        <span class="info-label">اسم الكاشير:</span>
                        <span class="info-value" style="color: red;">غير محدد (Debug: '@cashierName')</span>
                    </div>
                }
                <div class="info-item">
                    <span class="info-label">صالحة حتى:</span>
                    <span class="info-value">@DateTime.Now.AddDays(30).ToString("dd/MM/yyyy")</span>
                </div>
            </div>
            
            <div class="info-section">
                <h3>👤 بيانات العميل</h3>
                <div class="info-item">
                    <span class="info-label">اسم العميل:</span>
                    <span class="info-value">@entityName</span>
                </div>
                <div class="info-item">
                    <span class="info-label">رقم الهاتف:</span>
                    <span class="info-value">@phoneNumber</span>
                </div>
                @if (!string.IsNullOrEmpty(Model.AdditionalPhone))
                {
                    <div class="info-item">
                        <span class="info-label">هاتف إضافي:</span>
                        <span class="info-value">@Model.AdditionalPhone</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.Email))
                {
                    <div class="info-item">
                        <span class="info-label">البريد الإلكتروني:</span>
                        <span class="info-value">@Model.Email</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.FullAddress))
                {
                    <div class="info-item">
                        <span class="info-label">العنوان:</span>
                        <span class="info-value">@Model.FullAddress</span>
                    </div>
                }
                <div class="info-item">
                    <span class="info-label">رقم العميل:</span>
                    <span class="info-value">CUS-@Model.Id.ToString("D4")</span>
                </div>
            </div>
        </div>

        <!-- Invoice Items -->
        <div class="invoice-table">
            <div class="table-header">
                📦 تفاصيل المنتجات المشتراة (@(transactions?.Count() ?? 0) عنصر)
            </div>
            
            @if (transactions?.Any() == true)
            {
                <table class="invoice-items">
                    <thead>
                        <tr>
                            <th style="width: 50px;">م</th>
                            <th style="width: 200px;">المنتج</th>
                            <th style="width: 80px;">الكمية</th>
                            <th style="width: 100px;">سعر الوحدة</th>
                            <th style="width: 100px;">الإجمالي</th>
                            <th style="width: 80px;">الخصم</th>
                            <th style="width: 100px;">الصافي</th>
                            <th style="width: 90px;">التاريخ</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var itemCounter = 1;
                        }
                        @foreach (var transaction in transactions.Cast<dynamic>().OrderBy(t => (DateTime)t.Date))
                        {
                            var itemTotal = (decimal)transaction.TotalPrice;
                            var itemDiscount = (decimal)transaction.Discount;
                            var itemNet = itemTotal - itemDiscount;
                            
                            <tr>
                                <td>@itemCounter</td>
                                <td class="item-name">@(transaction.Product?.Name ?? "منتج غير محدد")</td>
                                <td>@((int)transaction.Quantity) قطعة</td>
                                <td class="amount">@(((decimal)(transaction.Product?.Price ?? 0)).ToString("N2"))</td>
                                <td class="amount">@itemTotal.ToString("N2")</td>
                                <td class="discount">@itemDiscount.ToString("N2")</td>
                                <td class="amount">@itemNet.ToString("N2")</td>
                                <td>@(((DateTime)transaction.Date).ToString("dd/MM"))</td>
                            </tr>
                            itemCounter++;
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div style="padding: 40px; text-align: center; color: #6c757d;">
                    <h3>📦 لا توجد منتجات في هذه الفاتورة</h3>
                </div>
            }
        </div>

        <!-- Invoice Summary -->
        <div class="invoice-summary">
            <div class="summary-grid">
                <div class="summary-section">
                    <h4>💰 ملخص المبالغ</h4>
                    <div class="summary-item">
                        <span class="summary-label">المجموع الفرعي:</span>
                        <span class="summary-value">@subtotal.ToString("N2") ج.م</span>
                    </div>
                    @if (totalDiscount > 0)
                    {
                        <div class="summary-item">
                            <span class="summary-label">إجمالي الخصم:</span>
                            <span class="summary-value discount">- @totalDiscount.ToString("N2") ج.م</span>
                        </div>
                    }
                    <div class="summary-item">
                        <span class="summary-label">المجموع النهائي:</span>
                        <span class="summary-value total">@totalPurchases.ToString("N2") ج.م</span>
                    </div>
                </div>
                
                <div class="summary-section">
                    <h4>💳 حالة الدفع</h4>
                    <div class="summary-item">
                        <span class="summary-label">المبلغ المدفوع:</span>
                        <span class="summary-value paid">@totalPaid.ToString("N2") ج.م</span>
                    </div>
                    <div class="summary-item">
                        <span class="summary-label">المتبقي:</span>
                        <span class="summary-value @(remainingBalance > 0 ? "debt" : "paid")">@remainingBalance.ToString("N2") ج.م</span>
                    </div>
                    <div class="summary-item">
                        <span class="summary-label">عدد العناصر:</span>
                        <span class="summary-value">@(transactions?.Count() ?? 0) عنصر</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Payment Status -->
        <div class="status-section">
            @if (remainingBalance <= 0)
            {
                <div class="payment-status status-paid">
                    ✅ مدفوعة بالكامل
                </div>
            }
            else if (totalPaid > 0)
            {
                <div class="payment-status status-partial">
                    ⚠️ مدفوعة جزئياً
                </div>
            }
            else
            {
                <div class="payment-status status-unpaid">
                    ❌ غير مدفوعة
                </div>
            }
        </div>

        <!-- Footer -->
        <div class="invoice-footer">
            <div class="footer-text">
                <strong>شكراً لتعاملكم معنا | نتطلع لخدمتكم دائماً</strong>
            </div>
            <div class="footer-contact">
                للاستفسارات: 01234567890 | البريد الإلكتروني: info@pesticides-shop.com
            </div>
            <div style="margin-top: 10px; font-size: 0.8rem; opacity: 0.7;">
                تم إنشاء هذه الفاتورة إلكترونياً في @DateTime.Now.ToString("dd/MM/yyyy HH:mm")
            </div>
        </div>

        <!-- Watermark -->
        <div class="watermark">INVOICE</div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Update watermark based on payment status
            const watermark = document.querySelector('.watermark');
            const remainingBalance = @remainingBalance;
            
            if (remainingBalance <= 0) {
                watermark.textContent = 'PAID';
                watermark.style.color = 'rgba(40, 167, 69, 0.1)';
            } else if (@totalPaid > 0) {
                watermark.textContent = 'PARTIAL';
                watermark.style.color = 'rgba(255, 193, 7, 0.1)';
            } else {
                watermark.textContent = 'UNPAID';
                watermark.style.color = 'rgba(220, 53, 69, 0.1)';
            }
        });

        // Print function
        function printInvoice() {
            window.print();
        }

        // Function to send invoice via WhatsApp
        function sendInvoiceViaWhatsApp() {
            try {
                // Get customer phone number
                const customerPhone = '@Html.Raw(phoneNumber)';
                if (!customerPhone) {
                    alert('❌ لا يوجد رقم هاتف للعميل لإرسال الفاتورة');
                    return;
                }

                // Show loading message
                alert('🔄 جاري إرسال الرسالة عبر الواتساب...');
                
                // Send WhatsApp message directly
                sendWhatsAppMessage(customerPhone).then((whatsappUrl) => {
                    // Open WhatsApp with message
                    window.open(whatsappUrl, '_blank');
                }).catch(error => {
                    console.error('Error sending WhatsApp message:', error);
                    alert('❌ حدث خطأ في إرسال الرسالة عبر الواتساب');
                });
                
            } catch (error) {
                console.error('Error sending invoice via WhatsApp:', error);
                alert('❌ حدث خطأ في إرسال الفاتورة عبر الواتساب');
            }
        }

        // Function to send WhatsApp message
        async function sendWhatsAppMessage(phoneNumber) {
            try {
                const invoiceId = '@Model.Id';
                
                // Use fetch to get WhatsApp URL and open in new tab
                const response = await fetch(`/Invoices/SendWhatsApp/${invoiceId}`);
                const htmlContent = await response.text();
                
                // Create a temporary div to execute the script
                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = htmlContent;
                document.body.appendChild(tempDiv);
                
                // Execute the script
                const script = tempDiv.querySelector('script');
                if (script) {
                    eval(script.textContent);
                }
                
                // Clean up
                document.body.removeChild(tempDiv);
                
            } catch (error) {
                console.error('Error sending WhatsApp message:', error);
                alert('حدث خطأ في إرسال الفاتورة عبر واتساب: ' + error.message);
            }
        }


        // Function to create invoice summary for WhatsApp
        function createInvoiceSummary() {
            const customerName = '@Html.Raw(entityName)';
            const invoiceNumber = '@Html.Raw(invoiceNumber)';
            const orderNumber = '@Html.Raw(orderNumber)';
            const invoiceDate = '@DateTime.Now.ToString("dd/MM/yyyy")';
            const totalAmount = '@totalPurchases.ToString("N2")';
            const itemsCount = '@(transactions?.Count() ?? 0)';
            
            let message = `🌱 *Pharaonic*\n\n`;
            message += `📋 *رقم الفاتورة:* ${invoiceNumber}\n`;
            message += `📦 *رقم الطلب:* ${orderNumber}\n`;
            message += `📅 *التاريخ:* ${invoiceDate}\n`;
            message += `👤 *العميل:* ${customerName}\n`;
            message += `🛍️ *عدد العناصر:* ${itemsCount}\n`;
            message += `💰 *المبلغ الإجمالي:* ${totalAmount} ج.م\n\n`;
            message += `📄 تم إرفاق فاتورتك كملف PDF\n`;
            message += `💡 للاستفسار: 01097972975\n`;
            message += `🙏 شكراً لثقتكم بنا`;
            
            return message;
        }

        // Fallback function for basic phone formatting
        function formatPhoneForWhatsAppBasic(phone) {
            if (!phone) return '';
            
            // Remove all non-digit characters
            let cleaned = phone.replace(/[^\d]/g, '');
            
            // Remove leading zeros
            while (cleaned.startsWith('0') && cleaned.length > 1) {
                cleaned = cleaned.substring(1);
            }
            
            // Add country code if not present
            if (cleaned.startsWith('20')) {
                return cleaned;
            } else if (cleaned.startsWith('1') && cleaned.length === 10) {
                return '20' + cleaned;
            } else if (cleaned.length === 9) {
                return '20' + cleaned;
            } else if (cleaned.length === 10) {
                return '20' + cleaned;
            } else if (cleaned.length === 11) {
                return cleaned;
            }
            
            // Default: assume Egypt
            return '20' + cleaned;
        }

        // Keyboard shortcut for printing
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey && e.key === 'p') {
                e.preventDefault();
                printInvoice();
            }
        });
    </script>
</body>
</html>
