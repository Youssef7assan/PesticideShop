@model PesticideShop.Models.MultiExchangeRequest
@using PesticideShop.Extensions

@{
    ViewData["Title"] = "ุงุณุชุจุฏุงู ูุชุนุฏุฏ";
    var products = ViewBag.Products as List<PesticideShop.Models.Product>;
    var originalInvoiceNumber = ViewBag.OriginalInvoiceNumber as string;
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm bg-gradient-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="mb-0">
                              
                                ุงุณุชุจุฏุงู ูุชุนุฏุฏ ููููุชุฌุงุช
                            </h2>
                            <p class="mb-0 opacity-75">ุงุณุชุจุฏุงู ุนุฏุฉ ููุชุฌุงุช ูู ูุงุชูุฑุฉ ุณุงุจูุฉ ุจููุชุฌุงุช ุฃุฎุฑู</p>
                        </div>
                        <div>
                            <a href="@Url.Action("Create", new { originalInvoiceNumber = originalInvoiceNumber })" class="btn btn-light me-2" title="ุงุณุชุจุฏุงู ููุชุฌ ูุงุญุฏ">
                                โ ุงุณุชุจุฏุงู ูุงุญุฏ
                            </a>
                            <a href="@Url.Action("Index", "Invoices")" class="btn btn-outline-light">
                                โฌ๏ธ ุงูุนูุฏุฉ ููููุงุชูุฑ
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
           
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <form asp-action="MultiCreate" method="post" id="multiExchangeForm">
        <div class="row">
            <!-- Exchange Form -->
            <div class="col-md-8">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">
                            
                            ุจูุงูุงุช ุงูุงุณุชุจุฏุงู ุงููุชุนุฏุฏ
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- Original Invoice -->
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="OriginalInvoiceNumber" class="form-label">
                                  
                                    ุฑูู ุงููุงุชูุฑุฉ ุงูุฃุตููุฉ *
                                </label>
                                <div class="input-group">
                                    <input asp-for="OriginalInvoiceNumber" class="form-control" 
                                           placeholder="ูุซุงู: INV-20241225-001" 
                                           value="@originalInvoiceNumber" />
                                    <button type="button" id="loadInvoiceBtn" class="btn btn-outline-primary">
                                        ๐ ุชุญููู
                                    </button>
                                </div>
                                <span asp-validation-for="OriginalInvoiceNumber" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-file-invoice-dollar"></i>
                                    ุฑูู ูุงุชูุฑุฉ ุงูุงุณุชุจุฏุงู *
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-success text-white">EXC</span>
                                    <input type="text" id="exchangeInvoiceNumber" class="form-control" 
                                           placeholder="ุฃุฏุฎู ุจุงูู ุงูุฑูู..." 
                                           maxlength="20" />
                                    <input type="hidden" asp-for="ExchangeInvoiceNumber" id="exchangeInvoiceNumberHidden" />
                                </div>
                                <small class="form-text text-muted">ุณูุชู ุฅูุดุงุก ุฑูู ูุงุชูุฑุฉ ุงูุงุณุชุจุฏุงู ุชููุงุฆูุงู: EXC + ุงูุฑูู ุงูุฐู ุชุฏุฎูู</small>
                            </div>
                        </div>
                        
                        <!-- Invoice Status -->
                        <div class="row mb-3">
                            <div class="col-12">
                                <div id="invoiceStatus">
                                    <!-- Invoice status will be shown here -->
                                </div>
                            </div>
                        </div>

                        <!-- Exchange Items Section -->
                        <div class="card mt-4" id="exchangeItemsSection" style="display: none;">
                            <div class="card-header bg-light">
                                <h5 class="mb-0">
                                   
                                    ููุชุฌุงุช ุงูุงุณุชุจุฏุงู
                                    <button type="button" class="btn btn-success btn-sm float-end" id="addExchangeItem">
                                        
                                        ุฅุถุงูุฉ ููุชุฌ
                                    </button>
                                </h5>
                            </div>
                            <div class="card-body">
                                <div id="exchangeItemsContainer">
                                    <!-- Exchange items will be added here dynamically -->
                                </div>
                                <div id="noItemsMessage" class="text-center text-muted py-4">
                                  
                                    <p>ูู ูุชู ุฅุถุงูุฉ ุฃู ููุชุฌุงุช ููุงุณุชุจุฏุงู ุจุนุฏ</p>
                                    <p>ุงุถุบุท ุนูู "ุฅุถุงูุฉ ููุชุฌ" ูุจุฏุก ุงูุงุณุชุจุฏุงู</p>
                                </div>
                            </div>
                        </div>

                        <!-- Summary Section -->
                        <div class="card mt-4" id="summaryCard" style="display: none;">
                            <div class="card-header bg-info text-white">
                                <h5 class="mb-0">
                                    
                                    ููุฎุต ุงูุงุณุชุจุฏุงู
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="text-center">
                                            <h6 class="text-muted">ุนุฏุฏ ุงูููุชุฌุงุช</h6>
                                            <h4 id="totalItems">0</h4>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="text-center">
                                            <h6 class="text-muted">ุฅุฌูุงูู ุงููููุฉ</h6>
                                            <h4 id="totalQuantity">0</h4>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="text-center">
                                            <h6 class="text-muted">ุงููุฑู ูู ุงูุณุนุฑ</h6>
                                            <h4 id="totalPriceDifference" class="text-success">0.00 ุฌ.ู</h4>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Exchange Reason -->
                        <div class="row mb-3">
                            <div class="col-12">
                                <label asp-for="ExchangeReason" class="form-label">
                                   
                                    ุณุจุจ ุงูุงุณุชุจุฏุงู
                                </label>
                                <select asp-for="ExchangeReason" class="form-select">
                                    <option value="">ุงุฎุชุฑ ุงูุณุจุจ...</option>
                                    <option value="ุนูุจ ูู ุงูููุชุฌ">ุนูุจ ูู ุงูููุชุฌ</option>
                                    <option value="ููุงุณ ุบูุฑ ููุงุณุจ">ููุงุณ ุบูุฑ ููุงุณุจ</option>
                                    <option value="ููู ุบูุฑ ูุฑุบูุจ">ููู ุบูุฑ ูุฑุบูุจ</option>
                                    <option value="ุชูุถูู ุงูุนููู">ุชูุถูู ุงูุนููู</option>
                                    <option value="ููุชุฌ ููุชูู ุงูุตูุงุญูุฉ">ููุชุฌ ููุชูู ุงูุตูุงุญูุฉ</option>
                                    <option value="ุฃุฎุฑู">ุฃุฎุฑู</option>
                                </select>
                            </div>
                        </div>

                        <!-- Notes -->
                        <div class="row mb-3">
                            <div class="col-12">
                                <label asp-for="Notes" class="form-label">
                                    
                                    ููุงุญุธุงุช ุฅุถุงููุฉ
                                </label>
                                <textarea asp-for="Notes" class="form-control" rows="3" 
                                          placeholder="ุฃู ููุงุญุธุงุช ุฅุถุงููุฉ ุญูู ุนูููุฉ ุงูุงุณุชุจุฏุงู..."></textarea>
                            </div>
                        </div>

                        <!-- Submit Buttons -->
                        <div class="row">
                            <div class="col-12">
                                <div class="d-flex gap-2">
                                    <button type="submit" class="btn btn-success" id="submitBtn" disabled>
                                        โ ุชูููุฐ ุงูุงุณุชุจุฏุงู ุงููุชุนุฏุฏ
                                    </button>
                                    <button type="reset" class="btn btn-outline-secondary">
                                        ๐ ุฅุนุงุฏุฉ ุชุนููู
                                    </button>
                                    <a href="@Url.Action("Index", "Invoices")" class="btn btn-outline-danger">
                                        โ ุฅูุบุงุก
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Summary Panel -->
            <div class="col-md-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0">
                          
                            ููุฎุต ุงูุงุณุชุจุฏุงู ุงููุชุนุฏุฏ
                        </h5>
                    </div>
                    <div class="card-body">
                        <div id="exchangeSummary">
                            <div class="text-center text-muted">
                              
                                <p>ูู ุจููุก ุจูุงูุงุช ุงูุงุณุชุจุฏุงู ูุฑุคูุฉ ุงูููุฎุต</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Exchange Rules -->
                <div class="card border-0 shadow-sm mt-3">
                    <div class="card-header bg-warning text-dark">
                        <h6 class="mb-0">
                           
                            ููุงุนุฏ ุงูุงุณุชุจุฏุงู ุงููุชุนุฏุฏ
                        </h6>
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled mb-0">
                            <li class="mb-2">
                              
                                ูููู ุงุณุชุจุฏุงู ุนุฏุฉ ููุชุฌุงุช ูู ุนูููุฉ ูุงุญุฏุฉ
                            </li>
                            <li class="mb-2">
                              
                                ุงูููุชุฌุงุช ุงูุฌุฏูุฏุฉ ูุฌุจ ุฃู ุชููู ูุชููุฑุฉ
                            </li>
                            <li class="mb-2">
                              
                                ุณูุชู ุญุณุงุจ ุงููุฑูู ูู ุงูุฃุณุนุงุฑ ุชููุงุฆูุงู
                            </li>
                            <li class="mb-2">
                              
                                ูููู ุฅุถุงูุฉ ุฃู ุญุฐู ููุชุฌุงุช ุฃุซูุงุก ุงูุนูููุฉ
                            </li>
                            <li class="mb-0">
                              
                                ุณูุชู ุฅูุดุงุก ูุงุชูุฑุฉ ุงุณุชุจุฏุงู ูุงุญุฏุฉ
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<!-- Exchange Item Template -->
<template id="exchangeItemTemplate">
    <div class="exchange-item card mb-3" data-item-index="">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h6 class="mb-0">
               
                ููุชุฌ ุงูุงุณุชุจุฏุงู <span class="item-number">1</span>
            </h6>
            <button type="button" class="btn btn-danger btn-sm remove-item">
               
                ุญุฐู
            </button>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group mb-3">
                        <label class="form-label">ุงูููุชุฌ ุงููุฏูู</label>
                        <select class="form-select old-product-select" name="ExchangeItems[INDEX].OldProductId" required>
                            <option value="">ุงุฎุชุฑ ุงูููุชุฌ ุงููุฏูู</option>
                            <!-- Options will be loaded from invoice items -->
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group mb-3">
                        <label class="form-label">ุงูููุชุฌ ุงูุฌุฏูุฏ</label>
                        <select class="form-select new-product-select" name="ExchangeItems[INDEX].NewProductId" required>
                            <option value="">ุงุฎุชุฑ ุงูููุชุฌ ุงูุฌุฏูุฏ</option>
                            @foreach (var product in ViewBag.Products as List<PesticideShop.Models.Product>)
                            {
                                var productDisplayText = $"{product.Name} - {product.Price} ุฌ.ู (ูุชููุฑ: {product.Quantity})";
                                if (!string.IsNullOrEmpty(product.Color))
                                {
                                    productDisplayText += $" - ุงูููู: {product.Color}";
                                }
                                if (product.Size != 0)
                                {
                                    productDisplayText += $" - ุงูููุงุณ: {product.Size.GetDisplayName()}";
                                }
                                <option value="@product.Id" 
                                        data-price="@product.Price" 
                                        data-quantity="@product.Quantity"
                                        data-color="@(product.Color ?? "")"
                                        data-size="@product.Size.GetDisplayName()">
                                    @productDisplayText
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group mb-3">
                        <label class="form-label">ุงููููุฉ</label>
                        <input type="number" class="form-control quantity-input" name="ExchangeItems[INDEX].ExchangedQuantity" min="1" max="999" required>
                        <small class="form-text text-muted quantity-help">ุงูุญุฏ ุงูุฃูุตู ุณูุชู ุชุญุฏูุซู ุชููุงุฆูุงู</small>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group mb-3">
                        <label class="form-label">ุงูุณุนุฑ ุงููุฏูู</label>
                        <input type="text" class="form-control old-price-display" readonly>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group mb-3">
                        <label class="form-label">ุงูุณุนุฑ ุงูุฌุฏูุฏ</label>
                        <input type="text" class="form-control new-price-display" readonly>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="alert alert-info mb-0">
                        <strong>ุงููุฑู ูู ุงูุณุนุฑ:</strong> <span class="price-difference">0.00 ุฌ.ู</span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="alert alert-warning mb-0">
                        <strong>ุงูููุชุฌุงุช:</strong> <span class="product-names">-</span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="alert alert-info mb-0">
                        <strong>ุชูุงุตูู ุงูููุชุฌ ุงููุฏูู:</strong> <span class="old-product-details">-</span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="alert alert-success mb-0">
                        <strong>ุชูุงุตูู ุงูููุชุฌ ุงูุฌุฏูุฏ:</strong> <span class="new-product-details">-</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</template>

@section Scripts {
    <script>
        $(document).ready(function() {
          
            let itemIndex = 0;
            let invoiceItems = [];

            // Load invoice items when invoice number is entered
            $('#loadInvoiceBtn').click(function() {
                loadInvoiceItems();
            });

            // Auto-load if invoice number is already provided
            @if (!string.IsNullOrEmpty(Model.OriginalInvoiceNumber))
            {
                <text>
                loadInvoiceItems();
                </text>
            }

            // Update exchange invoice number automatically
            $('#exchangeInvoiceNumber').on('input', function() {
                const userInput = $(this).val();
                const fullNumber = 'EXC' + userInput;
                $('#exchangeInvoiceNumberHidden').val(fullNumber);
            });

            // Initialize exchange invoice number if empty
            if (!$('#exchangeInvoiceNumberHidden').val()) {
                const currentDate = new Date();
                const dateString = currentDate.getFullYear().toString() + 
                                 (currentDate.getMonth() + 1).toString().padStart(2, '0') + 
                                 currentDate.getDate().toString().padStart(2, '0');
                const timeString = currentDate.getHours().toString().padStart(2, '0') + 
                                 currentDate.getMinutes().toString().padStart(2, '0') + 
                                 currentDate.getSeconds().toString().padStart(2, '0');
                const autoNumber = dateString + timeString;
                $('#exchangeInvoiceNumber').val(autoNumber);
                $('#exchangeInvoiceNumberHidden').val('EXC' + autoNumber);
            } else {
                // If there's already a value, extract the part after EXC
                const existingValue = $('#exchangeInvoiceNumberHidden').val();
                if (existingValue && existingValue.startsWith('EXC')) {
                    $('#exchangeInvoiceNumber').val(existingValue.substring(3));
                }
            }

            // Add new exchange item
            $('#addExchangeItem').click(function(e) {
                e.preventDefault();
               
                addExchangeItem();
            });

            // Remove exchange item
            $(document).on('click', '.remove-item', function() {
               
                $(this).closest('.exchange-item').remove();
                updateItemNumbers();
                updateSummary();
                updateSubmitButton();
            });

            // Update prices and calculations when products or quantity change
            $(document).on('change', '.old-product-select, .new-product-select, .quantity-input', function() {
               
                updateItemCalculations($(this).closest('.exchange-item'));
                updateSummary();
                updateSubmitButton();
            });

            // Update quantity max when old product is selected
            $(document).on('change', '.old-product-select', function() {
                const $select = $(this);
                const $item = $select.closest('.exchange-item');
                const $quantityInput = $item.find('.quantity-input');
                const $quantityHelp = $item.find('.quantity-help');
                const selectedOption = $select.find('option:selected');
                
                if (selectedOption.length && selectedOption.val()) {
                    const maxQuantity = parseInt(selectedOption.data('quantity')) || 0;
                    $quantityInput.attr('max', maxQuantity);
                    $quantityHelp.text(`ุงูุญุฏ ุงูุฃูุตู: ${maxQuantity}`);
                    
                    // Clear current quantity if it exceeds the new max
                    const currentQuantity = parseInt($quantityInput.val()) || 0;
                    if (currentQuantity > maxQuantity) {
                        $quantityInput.val('');
                    }
                } else {
                    $quantityInput.attr('max', 999);
                    $quantityHelp.text('ุงูุญุฏ ุงูุฃูุตู ุณูุชู ุชุญุฏูุซู ุชููุงุฆูุงู');
                }
            });

            // Validate quantity input
            $(document).on('input change', '.quantity-input', function() {
                const $input = $(this);
                const $item = $input.closest('.exchange-item');
                const $oldProductSelect = $item.find('.old-product-select');
                const $quantityHelp = $item.find('.quantity-help');
                const selectedOption = $oldProductSelect.find('option:selected');
                
                if (selectedOption.length && selectedOption.val()) {
                    const maxQuantity = parseInt(selectedOption.data('quantity')) || 0;
                    const enteredQuantity = parseInt($input.val()) || 0;
                    
                    // Remove previous validation classes
                    $input.removeClass('is-valid is-invalid');
                    $quantityHelp.removeClass('text-success text-danger');
                    
                    if (enteredQuantity > maxQuantity) {
                        $input.val(maxQuantity);
                        $input.addClass('is-invalid');
                        $quantityHelp.addClass('text-danger').text(`ุงูุญุฏ ุงูุฃูุตู: ${maxQuantity} (ุชู ุชุนุฏูู ุงููููุฉ ุชููุงุฆูุงู)`);
                        alert(`ุงููููุฉ ุงููุฏุฎูุฉ (${enteredQuantity}) ุชุชุฌุงูุฒ ุงููููุฉ ุงููุชุงุญุฉ (${maxQuantity}). ุชู ุชุนุฏูููุง ุชููุงุฆูุงู.`);
                        updateItemCalculations($item);
                        updateSummary();
                        updateSubmitButton();
                    } else if (enteredQuantity > 0 && enteredQuantity <= maxQuantity) {
                        $input.addClass('is-valid');
                        $quantityHelp.addClass('text-success').text(`ุงูุญุฏ ุงูุฃูุตู: ${maxQuantity} โ`);
                    } else if (enteredQuantity === 0) {
                        $quantityHelp.removeClass('text-success text-danger').text(`ุงูุญุฏ ุงูุฃูุตู: ${maxQuantity}`);
                    }
                }
            });

            function loadInvoiceItems() {
                const invoiceNumber = $('#OriginalInvoiceNumber').val();
                if (!invoiceNumber) {
                    alert('ูุฑุฌู ุฅุฏุฎุงู ุฑูู ุงููุงุชูุฑุฉ ุฃููุงู');
                    return;
                }

                $('#loadInvoiceBtn').prop('disabled', true).html('๐ ุฌุงุฑู ุงูุชุญููู...');

                $.get('@Url.Action("GetInvoiceItems", "Exchange")', { invoiceNumber: invoiceNumber })
                    .done(function(response) {
                       
                        if (response.success) {
                            invoiceItems = response.items;
                        
                            displayInvoiceStatus(response.items);
                            $('#exchangeItemsSection').show();
                            updateExchangeSummary();
                        } else {
                            alert('ุฎุทุฃ: ' + response.message);
                        }
                    })
                    .fail(function(xhr, status, error) {
                     
                        alert('ูุดู ูู ุชุญููู ุจูุงูุงุช ุงููุงุชูุฑุฉ: ' + error);
                    })
                    .always(function() {
                        $('#loadInvoiceBtn').prop('disabled', false).html('๐ ุชุญููู');
                    });
            }

            function displayInvoiceStatus(items) {
                const exchangeableItems = items.filter(item => item.canExchange);
                const statusHtml = `
                    <div class="alert alert-info">
                        <h6><i class="fas fa-file-invoice"></i> ูุนูููุงุช ุงููุงุชูุฑุฉ</h6>
                        <p class="mb-1"><strong>ุนุฏุฏ ุงูููุชุฌุงุช:</strong> ${items.length}</p>
                        <p class="mb-1"><strong>ูุงุจูุฉ ููุงุณุชุจุฏุงู:</strong> ${exchangeableItems.length}</p>
                        <p class="mb-0"><strong>ุงูููุชุฌุงุช ุงููุชุงุญุฉ ููุงุณุชุจุฏุงู:</strong></p>
                        <ul class="mb-0 mt-2">
                            ${exchangeableItems.length > 0 ? 
                                exchangeableItems.map(item => 
                                    `<li><strong>${item.productName}</strong> - ุงููููุฉ: ${item.quantity} - ุงูุณุนุฑ: ${item.unitPrice} ุฌ.ู</li>`
                                ).join('') : 
                                '<li class="text-muted">ูุง ุชูุฌุฏ ููุชุฌุงุช ูุงุจูุฉ ููุงุณุชุจุฏุงู</li>'
                            }
                        </ul>
                    </div>
                `;
                $('#invoiceStatus').html(statusHtml);
            }

            function addExchangeItem() {
                console.log('addExchangeItem called, invoiceItems length:', invoiceItems.length); // Debug log
                
                if (invoiceItems.length === 0) {
                    alert('ูุฑุฌู ุชุญููู ุงููุงุชูุฑุฉ ุฃููุงู');
                    return;
                }

                const template = document.getElementById('exchangeItemTemplate');
                if (!template) {
                    console.error('Template not found!'); // Debug log
                    alert('ุฎุทุฃ ูู ุชุญููู ุงููุงูุจ');
                    return;
                }

                const clone = template.content.cloneNode(true);
                
                // Update index placeholders
                const html = clone.querySelector('.exchange-item').outerHTML;
                const updatedHtml = html.replace(/INDEX/g, itemIndex);
                
                $('#exchangeItemsContainer').append(updatedHtml);
                $('#noItemsMessage').hide();
                $('#summaryCard').show();
                
               
                
                // Populate old product options with invoice items
                const $newItem = $('#exchangeItemsContainer .exchange-item').last();
                const $oldProductSelect = $newItem.find('.old-product-select');
                
                // Clear existing options except the first one
                $oldProductSelect.find('option:not(:first)').remove();
               
                
                // Add invoice items as options
                const exchangeableItems = invoiceItems.filter(item => item.canExchange);
               
                
                if (exchangeableItems.length === 0) {
                    $oldProductSelect.append('<option value="" disabled>ูุง ุชูุฌุฏ ููุชุฌุงุช ูุงุจูุฉ ููุงุณุชุจุฏุงู</option>');
                } else {
                    exchangeableItems.forEach(item => {
                        const optionText = `${item.productName} - ${item.unitPrice} ุฌ.ู (ูุชููุฑ: ${item.quantity})${item.color ? ` - ุงูููู: ${item.color}` : ''}${item.size ? ` - ุงูููุงุณ: ${item.size}` : ''}`;
                        $oldProductSelect.append(`
                            <option value="${item.productId}" 
                                    data-price="${item.unitPrice}" 
                                    data-quantity="${item.quantity}"
                                    data-color="${item.color || ''}"
                                    data-size="${item.size || ''}">
                                ${optionText}
                            </option>
                        `);
                    });
                }
                
                itemIndex++;
               
                
                updateItemNumbers();
                updateSummary();
                updateSubmitButton();
                
             
            }

            function updateItemNumbers() {
                $('.exchange-item').each(function(index) {
                    $(this).find('.item-number').text(index + 1);
                    $(this).attr('data-item-index', index);
                    
                    // Update form field names
                    $(this).find('select, input').each(function() {
                        const name = $(this).attr('name');
                        if (name) {
                            $(this).attr('name', name.replace(/\[\d+\]/, '[' + index + ']'));
                        }
                    });
                });
            }

            function updateItemCalculations(item) {
                const oldProductSelect = item.find('.old-product-select');
                const newProductSelect = item.find('.new-product-select');
                const quantityInput = item.find('.quantity-input');
                
                const oldPrice = parseFloat(oldProductSelect.find('option:selected').data('price')) || 0;
                const newPrice = parseFloat(newProductSelect.find('option:selected').data('price')) || 0;
                const quantity = parseInt(quantityInput.val()) || 0;
                
                const priceDifference = (newPrice - oldPrice) * quantity;
                
                item.find('.old-price-display').val(oldPrice.toFixed(2) + ' ุฌ.ู');
                item.find('.new-price-display').val(newPrice.toFixed(2) + ' ุฌ.ู');
                item.find('.price-difference').text(priceDifference.toFixed(2) + ' ุฌ.ู');
                
                const oldProductName = oldProductSelect.find('option:selected').text();
                const newProductName = newProductSelect.find('option:selected').text();
                item.find('.product-names').text(`${oldProductName} โ ${newProductName}`);
                
                // Update product details
                const oldSelectedOption = oldProductSelect.find('option:selected');
                const newSelectedOption = newProductSelect.find('option:selected');
                
                let oldDetails = '-';
                let newDetails = '-';
                
                if (oldSelectedOption.length && oldSelectedOption.val()) {
                    const oldColor = oldSelectedOption.data('color') || '';
                    const oldSize = oldSelectedOption.data('size') || '';
                    oldDetails = `ุงูุณุนุฑ: ${oldPrice.toFixed(2)} ุฌ.ู`;
                    if (oldColor) oldDetails += ` | ุงูููู: ${oldColor}`;
                    if (oldSize) oldDetails += ` | ุงูููุงุณ: ${oldSize}`;
                }
                
                if (newSelectedOption.length && newSelectedOption.val()) {
                    const newColor = newSelectedOption.data('color') || '';
                    const newSize = newSelectedOption.data('size') || '';
                    const newQuantity = newSelectedOption.data('quantity') || 0;
                    newDetails = `ุงูุณุนุฑ: ${newPrice.toFixed(2)} ุฌ.ู | ูุชููุฑ: ${newQuantity}`;
                    if (newColor) newDetails += ` | ุงูููู: ${newColor}`;
                    if (newSize) newDetails += ` | ุงูููุงุณ: ${newSize}`;
                }
                
                item.find('.old-product-details').text(oldDetails);
                item.find('.new-product-details').text(newDetails);
                
                // Color coding for price difference
                const priceDiffElement = item.find('.price-difference');
                if (priceDifference > 0) {
                    priceDiffElement.removeClass('text-success text-danger').addClass('text-danger');
                } else if (priceDifference < 0) {
                    priceDiffElement.removeClass('text-success text-danger').addClass('text-success');
                } else {
                    priceDiffElement.removeClass('text-success text-danger');
                }
            }

            function updateSummary() {
                const items = $('.exchange-item');
                const totalItems = items.length;
                let totalQuantity = 0;
                let totalPriceDifference = 0;
                
                console.log('updateSummary called, total items:', totalItems); // Debug log
                
                items.each(function() {
                    const quantity = parseInt($(this).find('.quantity-input').val()) || 0;
                    const priceDiffText = $(this).find('.price-difference').text();
                    const priceDiff = parseFloat(priceDiffText.replace(' ุฌ.ู', '')) || 0;
                    
                    totalQuantity += quantity;
                    totalPriceDifference += priceDiff;
                });
                
                console.log('Summary calculated - Items:', totalItems, 'Quantity:', totalQuantity, 'Price Diff:', totalPriceDifference); // Debug log
                
                $('#totalItems').text(totalItems);
                $('#totalQuantity').text(totalQuantity);
                $('#totalPriceDifference').text(totalPriceDifference.toFixed(2) + ' ุฌ.ู');
                
                // Update sidebar summary
                $('#summaryTotalItems').text(totalItems);
                $('#summaryTotalQuantity').text(totalQuantity);
                $('#summaryTotalPrice').text(totalPriceDifference.toFixed(2) + ' ุฌ.ู');
                
                // Color coding for total price difference
                const totalPriceElement = $('#totalPriceDifference');
                const summaryPriceElement = $('#summaryTotalPrice');
                if (totalPriceDifference > 0) {
                    totalPriceElement.removeClass('text-success text-danger').addClass('text-danger');
                    summaryPriceElement.removeClass('text-success text-danger').addClass('text-danger');
                } else if (totalPriceDifference < 0) {
                    totalPriceElement.removeClass('text-success text-danger').addClass('text-success');
                    summaryPriceElement.removeClass('text-success text-danger').addClass('text-success');
                } else {
                    totalPriceElement.removeClass('text-success text-danger');
                    summaryPriceElement.removeClass('text-success text-danger');
                }
            }

            function updateExchangeSummary() {
                if (invoiceItems.length === 0) {
                    $('#exchangeSummary').html(`
                        <div class="text-center text-muted">
                            <i class="fas fa-info-circle fa-2x mb-3"></i>
                            <p>ูู ุจุชุญููู ุงููุงุชูุฑุฉ ุฃููุงู</p>
                        </div>
                    `);
                    return;
                }

                const exchangeableItems = invoiceItems.filter(item => item.canExchange);
                const summaryHtml = `
                    <div class="mb-3">
                        <h6><i class="fas fa-file-invoice"></i> ุงููุงุชูุฑุฉ ุงูุฃุตููุฉ</h6>
                        <p class="mb-1"><strong>ุฑูู ุงููุงุชูุฑุฉ:</strong> ${$('#OriginalInvoiceNumber').val()}</p>
                        <p class="mb-1"><strong>ุนุฏุฏ ุงูููุชุฌุงุช:</strong> ${invoiceItems.length}</p>
                        <p class="mb-0"><strong>ูุงุจูุฉ ููุงุณุชุจุฏุงู:</strong> ${exchangeableItems.length}</p>
                    </div>
                    <div class="mb-3">
                        <h6><i class="fas fa-exchange-alt"></i> ุงูุงุณุชุจุฏุงู ุงููุชุนุฏุฏ</h6>
                        <p class="mb-1"><strong>ุนุฏุฏ ุงูููุชุฌุงุช ุงููุถุงูุฉ:</strong> <span id="summaryTotalItems">0</span></p>
                        <p class="mb-1"><strong>ุฅุฌูุงูู ุงููููุฉ:</strong> <span id="summaryTotalQuantity">0</span></p>
                        <p class="mb-0"><strong>ุงููุฑู ูู ุงูุณุนุฑ:</strong> <span id="summaryTotalPrice">0.00 ุฌ.ู</span></p>
                    </div>
                `;
                $('#exchangeSummary').html(summaryHtml);
            }

            function updateSubmitButton() {
                const hasItems = $('.exchange-item').length > 0;
                const allValid = $('.exchange-item').length > 0 && 
                    $('.exchange-item').toArray().every(item => {
                        const $item = $(item);
                        return $item.find('.old-product-select').val() && 
                               $item.find('.new-product-select').val() && 
                               $item.find('.quantity-input').val();
                    });
                
                console.log('updateSubmitButton - hasItems:', hasItems, 'allValid:', allValid); // Debug log
                
                $('#submitBtn').prop('disabled', !allValid);
                
                if (allValid) {
                    console.log('Submit button enabled'); // Debug log
                } else {
                    console.log('Submit button disabled'); // Debug log
                }
            }

            // Form submission
            $('#multiExchangeForm').on('submit', function(e) {
                const items = $('.exchange-item');
                if (items.length === 0) {
                    e.preventDefault();
                    alert('ูุฑุฌู ุฅุถุงูุฉ ููุชุฌ ูุงุญุฏ ุนูู ุงูุฃูู ููุงุณุชุจุฏุงู');
                    return false;
                }
                
                // Validate all items have required fields and quantities
                let isValid = true;
                let validationMessage = '';
                
                items.each(function() {
                    const $item = $(this);
                    const oldProduct = $item.find('.old-product-select').val();
                    const newProduct = $item.find('.new-product-select').val();
                    const quantity = parseInt($item.find('.quantity-input').val()) || 0;
                    const selectedOption = $item.find('.old-product-select option:selected');
                    const maxQuantity = parseInt(selectedOption.data('quantity')) || 0;
                    
                    if (!oldProduct || !newProduct || !quantity) {
                        isValid = false;
                        validationMessage = 'ูุฑุฌู ููุก ุฌููุน ุงูุญููู ุงููุทููุจุฉ';
                        return false;
                    }
                    
                    if (quantity <= 0) {
                        isValid = false;
                        validationMessage = 'ุงููููุฉ ูุฌุจ ุฃู ุชููู ุฃูุจุฑ ูู ุตูุฑ';
                        return false;
                    }
                    
                    if (quantity > maxQuantity) {
                        isValid = false;
                        validationMessage = `ุงููููุฉ ุงููุฏุฎูุฉ (${quantity}) ุชุชุฌุงูุฒ ุงููููุฉ ุงููุชุงุญุฉ (${maxQuantity})`;
                        return false;
                    }
                });
                
                if (!isValid) {
                    e.preventDefault();
                    alert(validationMessage);
                    return false;
                }
                
                const confirmMessage = `ูู ุฃูุช ูุชุฃูุฏ ูู ุชูููุฐ ุงูุงุณุชุจุฏุงู ุงููุชุนุฏุฏ ูู ${items.length} ููุชุฌุ`;
                if (!confirm(confirmMessage)) {
                    e.preventDefault();
                    return false;
                }
            });

            // Initialize with one item if original invoice number is provided
            @if (!string.IsNullOrEmpty(Model.OriginalInvoiceNumber))
            {
                <text>
                addExchangeItem();
                </text>
            }
        });
    </script>

    <style>
        .bg-gradient-primary {
            background: linear-gradient(45deg, #007bff, #0056b3) !important;
        }

        .opacity-75 {
            opacity: 0.75;
        }

        .exchange-item {
            transition: all 0.2s ease;
        }

        .exchange-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,.1);
        }

        .card {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,.15) !important;
        }

        .btn-group-vertical .btn {
            border-radius: 0.25rem !important;
            margin-bottom: 2px;
        }

        .badge {
            font-size: 0.75em;
        }

        .fw-bold {
            font-weight: 600 !important;
        }

        .form-control:focus, .form-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        .alert {
            border: none;
            border-radius: 0.5rem;
        }

        .text-danger {
            color: #dc3545 !important;
        }

        .text-success {
            color: #28a745 !important;
        }

        /* Enhanced product details styling */
        .old-product-details, .new-product-details {
            font-size: 0.9em;
            line-height: 1.4;
        }

        .alert-info .old-product-details {
            color: #0c5460;
        }

        .alert-success .new-product-details {
            color: #155724;
        }

        /* Product select styling */
        .form-select option {
            padding: 8px 12px;
            border-bottom: 1px solid #eee;
        }

        .form-select option:hover {
            background-color: #f8f9fa;
        }

        /* Enhanced product display */
        .product-display-text {
            font-weight: 500;
            color: #495057;
        }

        .product-price {
            color: #28a745;
            font-weight: 600;
        }

        .product-quantity {
            color: #6c757d;
            font-size: 0.9em;
        }

        .product-color {
            color: #007bff;
            font-weight: 500;
        }

        .product-size {
            color: #fd7e14;
            font-weight: 500;
        }
    </style>
}
