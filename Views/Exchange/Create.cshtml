@model PesticideShop.Controllers.ExchangeRequest

@{
    ViewData["Title"] = "ุงุณุชุจุฏุงู ููุชุฌ";
    var products = ViewBag.Products as List<PesticideShop.Models.Product>;
    var originalInvoiceNumber = ViewBag.OriginalInvoiceNumber as string;
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm bg-gradient-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="mb-0">
                                <i class="fas fa-exchange-alt"></i>
                                ุงุณุชุจุฏุงู ููุชุฌ
                            </h2>
                            <p class="mb-0 opacity-75">ุงุณุชุจุฏุงู ููุชุฌ ููุฌูุฏ ูู ูุงุชูุฑุฉ ุณุงุจูุฉ ุจููุชุฌ ุขุฎุฑ</p>
                        </div>
                        <div>
                            <a href="@Url.Action("MultiCreate", new { originalInvoiceNumber = originalInvoiceNumber })" class="btn btn-warning me-2" title="ุงุณุชุจุฏุงู ูุชุนุฏุฏ ููููุชุฌุงุช">
                                ๐ ุงุณุชุจุฏุงู ูุชุนุฏุฏ
                            </a>
                            <a href="@Url.Action("Index", "Invoices")" class="btn btn-light">
                                โฌ๏ธ ุงูุนูุฏุฉ ููููุงุชูุฑ
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <form asp-action="Create" method="post" id="exchangeForm">
        <div class="row">
            <!-- Exchange Form -->
            <div class="col-md-8">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">
                            <i class="fas fa-edit text-primary"></i>
                            ุจูุงูุงุช ุงูุงุณุชุจุฏุงู
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- Original Invoice -->
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="OriginalInvoiceNumber" class="form-label">
                                    <i class="fas fa-file-invoice"></i>
                                    ุฑูู ุงููุงุชูุฑุฉ ุงูุฃุตููุฉ *
                                </label>
                                <div class="input-group">
                                    <input asp-for="OriginalInvoiceNumber" class="form-control" 
                                           placeholder="ูุซุงู: INV-20241225-001" 
                                           value="@originalInvoiceNumber" />
                                    <button type="button" id="loadInvoiceBtn" class="btn btn-outline-primary">
                                        ๐ ุชุญููู
                                    </button>
                                </div>
                                <span asp-validation-for="OriginalInvoiceNumber" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-file-invoice-dollar"></i>
                                    ุฑูู ูุงุชูุฑุฉ ุงูุงุณุชุจุฏุงู *
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-success text-white">EXC</span>
                                    <input type="text" id="exchangeInvoiceNumber" class="form-control" 
                                           placeholder="ุฃุฏุฎู ุจุงูู ุงูุฑูู..." 
                                           maxlength="20" />
                                </div>
                                <small class="form-text text-muted">ุณูุชู ุฅูุดุงุก ุฑูู ูุงุชูุฑุฉ ุงูุงุณุชุจุฏุงู ุชููุงุฆูุงู: EXC + ุงูุฑูู ุงูุฐู ุชุฏุฎูู</small>
                            </div>
                        </div>
                        
                        <!-- Invoice Status -->
                        <div class="row mb-3">
                            <div class="col-12">
                                <div id="invoiceStatus">
                                    <!-- Invoice status will be shown here -->
                                </div>
                            </div>
                        </div>

                        <!-- Original Product Selection -->
                        <div class="row mb-3" id="originalProductSection" style="display: none;">
                            <div class="col-md-6">
                                <label asp-for="OldProductId" class="form-label">
                                    <i class="fas fa-box"></i>
                                    ุงูููุชุฌ ุงููุฑุงุฏ ุงุณุชุจุฏุงูู *
                                </label>
                                <select asp-for="OldProductId" class="form-select" id="oldProductSelect">
                                    <option value="">ุงุฎุชุฑ ุงูููุชุฌ...</option>
                                    <!-- Options will be loaded dynamically -->
                                </select>
                                <span asp-validation-for="OldProductId" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="ExchangedQuantity" class="form-label">
                                    <i class="fas fa-sort-numeric-up"></i>
                                    ุงููููุฉ ุงููุฑุงุฏ ุงุณุชุจุฏุงููุง *
                                </label>
                                <input asp-for="ExchangedQuantity" type="number" class="form-control" 
                                       min="1" placeholder="1" />
                                <span asp-validation-for="ExchangedQuantity" class="text-danger"></span>
                                <small class="form-text text-muted" id="availableQuantityText"></small>
                            </div>
                        </div>

                        <!-- New Product Selection -->
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="NewProductId" class="form-label">
                                    <i class="fas fa-box-open"></i>
                                    ุงูููุชุฌ ุงูุฌุฏูุฏ *
                                </label>
                                <select asp-for="NewProductId" class="form-select" id="newProductSelect">
                                    <option value="">ุงุฎุชุฑ ุงูููุชุฌ ุงูุฌุฏูุฏ...</option>
                                    @if (products != null && products.Any())
                                    {
                                        @foreach (var product in products)
                                        {
                                            <option value="@product.Id" 
                                                    data-price="@product.Price" 
                                                    data-quantity="@product.Quantity">
                                                @product.Name - @product.Price.ToString("N2") ุฌ.ู (ูุชููุฑ: @product.Quantity)
                                            </option>
                                        }
                                    }
                                    else
                                    {
                                        <option value="" disabled>ูุง ุชูุฌุฏ ููุชุฌุงุช ูุชุงุญุฉ</option>
                                    }
                                </select>
                                <span asp-validation-for="NewProductId" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-calculator"></i>
                                    ูุฑู ุงูุณุนุฑ
                                </label>
                                <div id="priceDifference" class="form-control-plaintext">
                                    <span class="text-muted">ุณูุชู ุญุณุงุจ ุงููุฑู ุชููุงุฆูุงู</span>
                                </div>
                            </div>
                        </div>

                        <!-- Exchange Reason -->
                        <div class="row mb-3">
                            <div class="col-12">
                                <label asp-for="ExchangeReason" class="form-label">
                                    <i class="fas fa-comment"></i>
                                    ุณุจุจ ุงูุงุณุชุจุฏุงู
                                </label>
                                <select asp-for="ExchangeReason" class="form-select">
                                    <option value="">ุงุฎุชุฑ ุงูุณุจุจ...</option>
                                    <option value="ุนูุจ ูู ุงูููุชุฌ">ุนูุจ ูู ุงูููุชุฌ</option>
                                    <option value="ููุงุณ ุบูุฑ ููุงุณุจ">ููุงุณ ุบูุฑ ููุงุณุจ</option>
                                    <option value="ููู ุบูุฑ ูุฑุบูุจ">ููู ุบูุฑ ูุฑุบูุจ</option>
                                    <option value="ุชูุถูู ุงูุนููู">ุชูุถูู ุงูุนููู</option>
                                    <option value="ููุชุฌ ููุชูู ุงูุตูุงุญูุฉ">ููุชุฌ ููุชูู ุงูุตูุงุญูุฉ</option>
                                    <option value="ุฃุฎุฑู">ุฃุฎุฑู</option>
                                </select>
                            </div>
                        </div>

                        <!-- Notes -->
                        <div class="row mb-3">
                            <div class="col-12">
                                <label asp-for="Notes" class="form-label">
                                    <i class="fas fa-sticky-note"></i>
                                    ููุงุญุธุงุช ุฅุถุงููุฉ
                                </label>
                                <textarea asp-for="Notes" class="form-control" rows="3" 
                                          placeholder="ุฃู ููุงุญุธุงุช ุฅุถุงููุฉ ุญูู ุนูููุฉ ุงูุงุณุชุจุฏุงู..."></textarea>
                            </div>
                        </div>

                        <!-- Submit Buttons -->
                        <div class="row">
                            <div class="col-12">
                                <div class="d-flex gap-2">
                                    <button type="submit" class="btn btn-success" id="submitBtn">
                                        โ ุชูููุฐ ุงูุงุณุชุจุฏุงู
                                    </button>
                                    <button type="reset" class="btn btn-outline-secondary">
                                        ๐ ุฅุนุงุฏุฉ ุชุนููู
                                    </button>
                                    <a href="@Url.Action("Index", "Invoices")" class="btn btn-outline-danger">
                                        โ ุฅูุบุงุก
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Summary Panel -->
            <div class="col-md-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-clipboard-list"></i>
                            ููุฎุต ุงูุงุณุชุจุฏุงู
                        </h5>
                    </div>
                    <div class="card-body">
                        <div id="exchangeSummary">
                            <div class="text-center text-muted">
                                <i class="fas fa-info-circle fa-2x mb-3"></i>
                                <p>ูู ุจููุก ุจูุงูุงุช ุงูุงุณุชุจุฏุงู ูุฑุคูุฉ ุงูููุฎุต</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Exchange Rules -->
                <div class="card border-0 shadow-sm mt-3">
                    <div class="card-header bg-warning text-dark">
                        <h6 class="mb-0">
                            <i class="fas fa-exclamation-triangle"></i>
                            ููุงุนุฏ ุงูุงุณุชุจุฏุงู
                        </h6>
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled mb-0">
                            <li class="mb-2">
                                <i class="fas fa-check text-success"></i>
                                ูููู ุงุณุชุจุฏุงู ุงูููุชุฌุงุช ุงููุจุงุนุฉ ููุท
                            </li>
                            <li class="mb-2">
                                <i class="fas fa-check text-success"></i>
                                ุงูููุชุฌ ุงูุฌุฏูุฏ ูุฌุจ ุฃู ูููู ูุชููุฑุงู
                            </li>
                            <li class="mb-2">
                                <i class="fas fa-check text-success"></i>
                                ูุชู ุชุญุฏูุซ ุงููุฎุฒูู ุชููุงุฆูุงู
                            </li>
                            <li class="mb-2">
                                <i class="fas fa-check text-success"></i>
                                ูุชู ุฅูุดุงุก ูุงุชูุฑุฉ ุงุณุชุจุฏุงู ุฌุฏูุฏุฉ
                            </li>
                            <li class="mb-0">
                                <i class="fas fa-info text-info"></i>
                                ูุฏ ุชุญุชุงุฌ ูุฏูุน ุฃู ุงุณุชุฑุฏุงุฏ ุงููุฑู ูู ุงูุณุนุฑ
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<style>
.bg-gradient-primary {
    background: linear-gradient(45deg, #007bff, #0056b3) !important;
}

.opacity-75 {
    opacity: 0.75;
}

.card {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.card:hover {
    transform: translateY(-2px);
}

.form-label {
    font-weight: 600;
    color: #495057;
}

.form-label i {
    margin-right: 5px;
    color: #6c757d;
}

#priceDifference {
    font-size: 1.1rem;
    font-weight: 600;
    padding: 8px 12px;
    border: 1px solid #dee2e6;
    border-radius: 0.375rem;
    background-color: #f8f9fa;
}

.price-positive {
    color: #dc3545 !important;
}

.price-negative {
    color: #28a745 !important;
}

.price-zero {
    color: #6c757d !important;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const originalInvoiceInput = document.querySelector('[name="OriginalInvoiceNumber"]');
    const loadInvoiceBtn = document.getElementById('loadInvoiceBtn');
    const oldProductSelect = document.getElementById('oldProductSelect');
    const newProductSelect = document.getElementById('newProductSelect');
    const quantityInput = document.querySelector('[name="ExchangedQuantity"]');
    const originalProductSection = document.getElementById('originalProductSection');
    const invoiceStatus = document.getElementById('invoiceStatus');
    const priceDifferenceDiv = document.getElementById('priceDifference');
    const exchangeSummary = document.getElementById('exchangeSummary');
    const exchangeInvoiceNumberInput = document.getElementById('exchangeInvoiceNumber');

    let invoiceItems = [];
    let oldProductPrice = 0;

    // Generate exchange invoice number automatically
    function generateExchangeInvoiceNumber() {
        const now = new Date();
        const year = now.getFullYear();
        const month = String(now.getMonth() + 1).padStart(2, '0');
        const day = String(now.getDate()).padStart(2, '0');
        const time = String(now.getHours()).padStart(2, '0') + String(now.getMinutes()).padStart(2, '0');
        
        // Generate a unique number based on timestamp
        const uniqueNumber = `${year}${month}${day}${time}`;
        
        // Set the input value
        exchangeInvoiceNumberInput.value = uniqueNumber;
        
        // Show preview
        showExchangeInvoicePreview();
    }

    // Show exchange invoice number preview
    function showExchangeInvoicePreview() {
        const userInput = exchangeInvoiceNumberInput.value.trim();
        if (userInput) {
            const fullNumber = `EXC${userInput}`;
            const preview = document.getElementById('exchangeInvoicePreview');
            if (preview) {
                preview.textContent = `ุฑูู ุงููุงุชูุฑุฉ ุงููุงูู: ${fullNumber}`;
            } else {
                // Create preview element if it doesn't exist
                const previewElement = document.createElement('small');
                previewElement.id = 'exchangeInvoicePreview';
                previewElement.className = 'form-text text-success fw-bold';
                previewElement.textContent = `ุฑูู ุงููุงุชูุฑุฉ ุงููุงูู: ${fullNumber}`;
                exchangeInvoiceNumberInput.parentNode.parentNode.appendChild(previewElement);
            }
        } else {
            const preview = document.getElementById('exchangeInvoicePreview');
            if (preview) {
                preview.remove();
            }
        }
    }

    // Auto-generate exchange invoice number on page load
    generateExchangeInvoiceNumber();

    // Update preview when user types
    exchangeInvoiceNumberInput.addEventListener('input', showExchangeInvoicePreview);

    // Load invoice items
    loadInvoiceBtn.addEventListener('click', async function() {
        const invoiceNumber = originalInvoiceInput.value.trim();
        
        if (!invoiceNumber) {
            alert('ูุฑุฌู ุฅุฏุฎุงู ุฑูู ุงููุงุชูุฑุฉ');
            return;
        }

        try {
            loadInvoiceBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> ุฌุงุฑู ุงูุชุญููู...';
            loadInvoiceBtn.disabled = true;

            const response = await fetch(`/Exchange/GetInvoiceItems?invoiceNumber=${encodeURIComponent(invoiceNumber)}`);
            const data = await response.json();

            if (data.success) {
                invoiceItems = data.items;
                populateOldProductSelect();
                originalProductSection.style.display = 'block';
                invoiceStatus.innerHTML = `
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle"></i>
                        ุชู ุชุญููู ุงููุงุชูุฑุฉ ุจูุฌุงุญ (${data.items.length} ููุชุฌ)
                    </div>
                `;
            } else {
                invoiceStatus.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle"></i>
                        ${data.message}
                    </div>
                `;
                originalProductSection.style.display = 'none';
            }
        } catch (error) {
            invoiceStatus.innerHTML = `
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-circle"></i>
                    ุญุฏุซ ุฎุทุฃ ูู ุชุญููู ุงููุงุชูุฑุฉ
                </div>
            `;
        } finally {
            loadInvoiceBtn.innerHTML = '<i class="fas fa-search"></i> ุชุญููู';
            loadInvoiceBtn.disabled = false;
        }
    });

    // Populate old product select
    function populateOldProductSelect() {
        oldProductSelect.innerHTML = '<option value="">ุงุฎุชุฑ ุงูููุชุฌ...</option>';
        
        invoiceItems.forEach(item => {
            if (item.canExchange) {
                const option = document.createElement('option');
                option.value = item.productId;
                
                // Build display text with color information
                let displayText = `${item.productName}`;
                if (item.color && item.color.trim() !== '') {
                    displayText += ` - ๐จ ${item.color}`;
                }
                if (item.size && item.size.trim() !== '') {
                    displayText += ` - ๐ ${item.size}`;
                }
                displayText += ` - ${item.unitPrice.toFixed(2)} ุฌ.ู (ุงููููุฉ: ${item.quantity})`;
                
                option.textContent = displayText;
                option.dataset.price = item.unitPrice;
                option.dataset.maxQuantity = item.quantity;
                oldProductSelect.appendChild(option);
            }
        });
    }

    // Update available quantity
    oldProductSelect.addEventListener('change', function() {
        const selectedOption = this.options[this.selectedIndex];
        if (selectedOption.value) {
            const maxQuantity = selectedOption.dataset.maxQuantity;
            oldProductPrice = parseFloat(selectedOption.dataset.price);
            quantityInput.max = maxQuantity;
            quantityInput.value = Math.min(quantityInput.value || 1, maxQuantity);
            document.getElementById('availableQuantityText').textContent = 
                `ุงูุญุฏ ุงูุฃูุตู: ${maxQuantity} ูุทุนุฉ`;
            updatePriceDifference();
        } else {
            oldProductPrice = 0;
            document.getElementById('availableQuantityText').textContent = '';
            updatePriceDifference();
        }
    });

    // Update price difference
    newProductSelect.addEventListener('change', updatePriceDifference);
    quantityInput.addEventListener('input', updatePriceDifference);

    function updatePriceDifference() {
        const newProductOption = newProductSelect.options[newProductSelect.selectedIndex];
        const quantity = parseInt(quantityInput.value) || 0;

        if (newProductOption.value && oldProductPrice > 0 && quantity > 0) {
            const newProductPrice = parseFloat(newProductOption.dataset.price);
            const difference = (newProductPrice - oldProductPrice) * quantity;

            let differenceText, differenceClass;
            if (difference > 0) {
                differenceText = `+${difference.toFixed(2)} ุฌ.ู (ูุฌุจ ุฏูุน ุงููุจูุบ)`;
                differenceClass = 'price-positive';
            } else if (difference < 0) {
                differenceText = `${difference.toFixed(2)} ุฌ.ู (ุงุณุชุฑุฏุงุฏ ููุนููู)`;
                differenceClass = 'price-negative';
            } else {
                differenceText = '0.00 ุฌ.ู (ูุง ููุฌุฏ ูุฑู)';
                differenceClass = 'price-zero';
            }

            priceDifferenceDiv.innerHTML = `<span class="${differenceClass}">${differenceText}</span>`;
            updateExchangeSummary(difference);
        } else {
            priceDifferenceDiv.innerHTML = '<span class="text-muted">ุณูุชู ุญุณุงุจ ุงููุฑู ุชููุงุฆูุงู</span>';
            updateExchangeSummary(0);
        }
    }

    function updateExchangeSummary(priceDifference) {
        const oldProductOption = oldProductSelect.options[oldProductSelect.selectedIndex];
        const newProductOption = newProductSelect.options[newProductSelect.selectedIndex];
        const quantity = parseInt(quantityInput.value) || 0;

        if (oldProductOption.value && newProductOption.value && quantity > 0) {
            exchangeSummary.innerHTML = `
                <div class="summary-item mb-3">
                    <h6 class="text-primary">ุงูููุชุฌ ุงููุฏูู:</h6>
                    <p class="mb-1">${oldProductOption.textContent}</p>
                    <small class="text-muted">ุงููููุฉ: ${quantity}</small>
                </div>
                <div class="summary-item mb-3">
                    <h6 class="text-success">ุงูููุชุฌ ุงูุฌุฏูุฏ:</h6>
                    <p class="mb-1">${newProductOption.textContent}</p>
                    <small class="text-muted">ุงููููุฉ: ${quantity}</small>
                </div>
                <hr>
                <div class="summary-item">
                    <h6>ูุฑู ุงูุณุนุฑ:</h6>
                    <p class="mb-0 ${priceDifference > 0 ? 'text-danger' : priceDifference < 0 ? 'text-success' : 'text-muted'}">
                        ${priceDifference > 0 ? '+' : ''}${priceDifference.toFixed(2)} ุฌ.ู
                    </p>
                    ${priceDifference > 0 ? '<small class="text-danger">ูุฌุจ ุฏูุน ุงููุฑู</small>' : 
                      priceDifference < 0 ? '<small class="text-success">ุงุณุชุฑุฏุงุฏ ููุนููู</small>' : 
                      '<small class="text-muted">ูุง ููุฌุฏ ูุฑู ูู ุงูุณุนุฑ</small>'}
                </div>
            `;
        } else {
            exchangeSummary.innerHTML = `
                <div class="text-center text-muted">
                    <i class="fas fa-info-circle fa-2x mb-3"></i>
                    <p>ูู ุจููุก ุจูุงูุงุช ุงูุงุณุชุจุฏุงู ูุฑุคูุฉ ุงูููุฎุต</p>
                </div>
            `;
        }
    }

    // Auto-load if original invoice number is provided
    if (originalInvoiceInput.value) {
        loadInvoiceBtn.click();
    }

    // Handle form submission
    document.getElementById('exchangeForm').addEventListener('submit', function(e) {
        const userInput = exchangeInvoiceNumberInput.value.trim();
        if (!userInput) {
            e.preventDefault();
            alert('ูุฑุฌู ุฅุฏุฎุงู ุฑูู ูุงุชูุฑุฉ ุงูุงุณุชุจุฏุงู');
            exchangeInvoiceNumberInput.focus();
            return;
        }

        // Create hidden input with full exchange invoice number
        const fullExchangeNumber = `EXC${userInput}`;
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'ExchangeInvoiceNumber';
        hiddenInput.value = fullExchangeNumber;
        this.appendChild(hiddenInput);

        // Show confirmation
        if (!confirm(`ูู ุฃูุช ูุชุฃูุฏ ูู ุฅูุดุงุก ุงุณุชุจุฏุงู ุจุฑูู ุงููุงุชูุฑุฉ: ${fullExchangeNumber}ุ`)) {
            e.preventDefault();
            return;
        }
    });
});
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
