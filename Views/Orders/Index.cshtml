@model IEnumerable<PesticideShop.Models.Invoice>

@{
    ViewData["Title"] = "ุงูุฃูุฑุฏุฑุงุช";
    
    // ุฏุงูุฉ ูุชุญููู ุทุฑููุฉ ุงูุฏูุน ุฅูู ูุต ุนุฑุจู
    string GetPaymentMethodDisplayName(string paymentMethod)
    {
        return paymentMethod switch
        {
            "cash" => "<i class='fas fa-money-bill'></i> ููุฏุงู",
            "visa" => "<i class='fas fa-credit-card'></i> ููุฒุง",
            "instapay" => "<i class='fas fa-mobile-alt'></i> ุงูุณุชุงุจุงู",
            "wallet" => "<i class='fas fa-wallet'></i> ูุญูุธุฉ ุฅููุชุฑูููุฉ",
            "delivery" => "<i class='fas fa-truck'></i> ุฏูุน ุนูุฏ ุงูุงุณุชูุงู",
            _ => paymentMethod
        };
    }

    // ุฏุงูุฉ ูุชุญููู ููุน ุงูุดุญู ุฅูู ูุต ุนุฑุจู
    string GetShippingTypeDisplayName(PesticideShop.Models.ShippingType? shippingType)
    {
        return shippingType switch
        {
            PesticideShop.Models.ShippingType.Bosta => "<i class='fas fa-box'></i> ุจูุณุทุง",
            PesticideShop.Models.ShippingType.Cairo => "<i class='fas fa-truck'></i> ูุงูุฑู",
            PesticideShop.Models.ShippingType.NoShipping => "<i class='fas fa-times-circle'></i> ุจุฏูู ุดุญู",
            _ => "ุบูุฑ ูุญุฏุฏ"
        };
    }
}

<div class="modern-header mb-5">
    <div class="header-background">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-lg-8">
                    <div class="header-content">
                        <div class="header-icon">
                            
                        </div>
                        <div class="header-text">
                            <h1 class="header-title">ุฅุฏุงุฑุฉ ุงูุฃูุฑุฏุฑุงุช - Pharaonic</h1>
                            <p class="header-subtitle">ูุธุงู ูุชูุงูู ูุฅุฏุงุฑุฉ ูุชุชุจุน ุฌููุน ุงูุทูุจุงุช ูุงููุจูุนุงุช</p>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 text-end">
                    <div class="header-actions">
                        <a asp-controller="Cashier" asp-action="Index" class="btn btn-success btn-lg">
                            <i class="fas fa-plus"></i>
                            ุฃูุฑุฏุฑ ุฌุฏูุฏ
                        </a>
                        @if (Model.Any())
                        {
                            <button type="button" class="btn btn-danger btn-lg ms-2" data-bs-toggle="modal" data-bs-target="#deleteAllModal">
                                <i class="fas fa-trash"></i>
                                ุญุฐู ุงููู
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <!-- ุฑุณุงุฆู ุงููุฌุงุญ ูุงูุฎุทุฃ -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i>
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Filters and Search -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <form method="get" asp-action="Index" id="filterForm">
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="searchTerm">๐ ุงูุจุญุซ:</label>
                                    <input type="text" name="searchTerm" id="searchTerm" class="form-control" 
                                           value="@ViewBag.SearchTerm" 
                                           placeholder="ุฑูู ุงููุงุชูุฑุฉุ ุงูุฃูุฑุฏุฑุ ุงุณู ุงูุนูููุ ุฑูู ุงููุงุชู...">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="dateFrom">๐ ูู ุชุงุฑูุฎ:</label>
                                    <input type="date" name="dateFrom" id="dateFrom" class="form-control" 
                                           value="@ViewBag.DateFrom">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="dateTo">๐ ุฅูู ุชุงุฑูุฎ:</label>
                                    <input type="date" name="dateTo" id="dateTo" class="form-control" 
                                           value="@ViewBag.DateTo">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="statusFilter">๐ ุงูุญุงูุฉ:</label>
                                    <select name="statusFilter" id="statusFilter" class="form-select">
                                        <option value="">ุฌููุน ุงูุญุงูุงุช</option>
                                        <option value="Draft" selected="@(ViewBag.StatusFilter == "Draft" ? "selected" : null)">๐ข ูู ุงูููุชุจ</option>
                                        <option value="Sent" selected="@(ViewBag.StatusFilter == "Sent" ? "selected" : null)">๐ค ูุฑุณู</option>
                                        <option value="Paid" selected="@(ViewBag.StatusFilter == "Paid" ? "selected" : null)">โ ูุฏููุน</option>
                                        <option value="Overdue" selected="@(ViewBag.StatusFilter == "Overdue" ? "selected" : null)">โฐ ูุชุฃุฎุฑ</option>
                                        <option value="Cancelled" selected="@(ViewBag.StatusFilter == "Cancelled" ? "selected" : null)">โ ููุบู</option>
                                        <option value="PartiallyPaid" selected="@(ViewBag.StatusFilter == "PartiallyPaid" ? "selected" : null)">๐ฐ ูุฏููุน ุฌุฒุฆูุงู</option>
                                        <option value="Postponed" selected="@(ViewBag.StatusFilter == "Postponed" ? "selected" : null)">โณ ูุคุฌู</option>
                                        <option value="UnderDelivery" selected="@(ViewBag.StatusFilter == "UnderDelivery" ? "selected" : null)">๐ ุชุญุช ุงูุชุณููู</option>
                                        <option value="NotDelivered" selected="@(ViewBag.StatusFilter == "NotDelivered" ? "selected" : null)">โ ูู ูุณูู</option>
                                        <option value="Delivered" selected="@(ViewBag.StatusFilter == "Delivered" ? "selected" : null)">โ ุชู ุงูุชุณููู</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="typeFilter">๐ ุงูููุน:</label>
                                    <select name="typeFilter" id="typeFilter" class="form-select">
                                        <option value="">ุฌููุน ุงูุฃููุงุน</option>
                                        <option value="Sale" selected="@(ViewBag.TypeFilter == "Sale" ? "selected" : null)">๐ ุจูุน</option>
                                        <option value="Return" selected="@(ViewBag.TypeFilter == "Return" ? "selected" : null)">โฉ๏ธ ุฅุฑุฌุงุน</option>
                                        <option value="Exchange" selected="@(ViewBag.TypeFilter == "Exchange" ? "selected" : null)">๐ ุงุณุชุจุฏุงู</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="originFilter">๐ ุงููุตุฏุฑ:</label>
                                    <select name="originFilter" id="originFilter" class="form-select">
                                        <option value="">ุฌููุน ุงููุตุงุฏุฑ</option>
                                        <option value="InStore" selected="@(ViewBag.OriginFilter == "InStore" ? "selected" : null)">๐ข ูู ุงููุญู</option>
                                        <option value="Instagram" selected="@(ViewBag.OriginFilter == "Instagram" ? "selected" : null)">๐ธ ุงูุณุชุฌุฑุงู</option>
                                        <option value="Facebook" selected="@(ViewBag.OriginFilter == "Facebook" ? "selected" : null)">๐ ููุณุจูู</option>
                                        <option value="Website" selected="@(ViewBag.OriginFilter == "Website" ? "selected" : null)">๐ ุงููููุน</option>
                                        <option value="Phone" selected="@(ViewBag.OriginFilter == "Phone" ? "selected" : null)">๐ ูุงุชู</option>
                                        <option value="WhatsApp" selected="@(ViewBag.OriginFilter == "WhatsApp" ? "selected" : null)">๐ฌ ูุงุชุณุงุจ</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>&nbsp;</label>
                                    <div class="d-flex gap-2">
                                        <button type="submit" class="btn btn-primary flex-fill">
                                            <i class="fas fa-search"></i> ุจุญุซ ูุชุตููุฉ
                                        </button>
                                        <a href="@Url.Action("Index")" class="btn btn-secondary flex-fill">
                                            <i class="fas fa-redo"></i> ุฅุนุงุฏุฉ ุชุนููู
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Search Results Info -->
    @if (!string.IsNullOrEmpty(ViewBag.SearchTerm) || !string.IsNullOrEmpty(ViewBag.StatusFilter) || !string.IsNullOrEmpty(ViewBag.TypeFilter) || !string.IsNullOrEmpty(ViewBag.OriginFilter) || !string.IsNullOrEmpty(ViewBag.PaymentFilter) || !string.IsNullOrEmpty(ViewBag.DateFrom) || !string.IsNullOrEmpty(ViewBag.DateTo))
    {
        <div class="row mb-2">
            <div class="col-12">
                <div class="alert alert-info d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fas fa-info-circle"></i>
                        <strong>ูุชุงุฆุฌ ุงูุจุญุซ:</strong> ุชู ุงูุนุซูุฑ ุนูู <strong>@Model.Count()</strong> ุฃูุฑุฏุฑ
                        @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                        {
                            <span class="badge bg-primary">ุงูุจุญุซ: @ViewBag.SearchTerm</span>
                        }
                        @if (!string.IsNullOrEmpty(ViewBag.StatusFilter))
                        {
                            <span class="badge bg-secondary">ุงูุญุงูุฉ: @ViewBag.StatusFilter</span>
                        }
                        @if (!string.IsNullOrEmpty(ViewBag.TypeFilter))
                        {
                            <span class="badge bg-success">ุงูููุน: @ViewBag.TypeFilter</span>
                        }
                        @if (!string.IsNullOrEmpty(ViewBag.OriginFilter))
                        {
                            <span class="badge bg-warning">ุงููุตุฏุฑ: @ViewBag.OriginFilter</span>
                        }
                        @if (!string.IsNullOrEmpty(ViewBag.PaymentFilter))
                        {
                            <span class="badge bg-info">ุทุฑููุฉ ุงูุฏูุน: @ViewBag.PaymentFilter</span>
                        }
                        @if (!string.IsNullOrEmpty(ViewBag.DateFrom))
                        {
                            <span class="badge bg-dark">ูู: @ViewBag.DateFrom</span>
                        }
                        @if (!string.IsNullOrEmpty(ViewBag.DateTo))
                        {
                            <span class="badge bg-dark">ุฅูู: @ViewBag.DateTo</span>
                        }
                    </div>
                    <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-secondary">
                        <i class="fas fa-times"></i> ูุณุญ ุงูููุงุชุฑ
                    </a>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-12">
<div class="card shadow-sm">
    <div class="card-header bg-primary text-white">
        <h5 class="card-title mb-0">
                        
            ูุงุฆูุฉ ุงูุฃูุฑุฏุฑุงุช
        </h5>
    </div>
                <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                            <table class="table table-hover" id="ordersTable">
                    <thead class="table-dark">
                        <tr>
                            <th class="text-center">#</th>
                            <th>ุฑูู ุงูุทูุจ</th>
                            <th>ุงูุนููู</th>
                                        <th>ุงูููุชุฌุงุช</th>
                            <th class="text-center">ุงููููุฉ</th>
                                        <th class="text-center">ุงููุฌููุน ุงููุฑุนู</th>
                            <th class="text-center">ุงูุฅุฌูุงูู</th>
                            <th class="text-center">ุงููุฏููุน</th>
                            <th class="text-center">ุงููุชุจูู</th>
                                        <th class="text-center">ุงููุตุฏุฑ</th>
                                        <th class="text-center">ููุน ุงูุดุญู</th>
                                        <th class="text-center">ุงูุญุงูุฉ</th>
                            <th class="text-center">ุงูุชุงุฑูุฎ</th>
                                        <th class="text-center">ุงูุฅุฌุฑุงุกุงุช</th>
                        </tr>
                    </thead>
                    <tbody>
                                    @foreach (var order in Model)
                                    {
                            <tr>
                                <td class="text-center">
                                                <span class="badge bg-secondary">@order.Id</span>
                                </td>
                                <td>
                                                        <span class="badge bg-info"><i class="fas fa-clipboard-list"></i> @order.OrderNumber</span>
                                </td>
                                <td>
                                    <div class="customer-info">
                                                    <div class="fw-bold">@order.Customer?.Name</div>
                                                    <small class="text-muted">@order.Customer?.PhoneNumber</small>
                                    </div>
                                </td>
                                <td>
                                    <div class="product-info">
                                                    @if (order.Items != null && order.Items.Any())
                                                    {
                                                        <div class="fw-bold">@order.Items.Count ููุชุฌ</div>
                                                        @foreach (var item in order.Items.Take(2))
                                                        {
                                                            <div class="small">
                                                                <span class="badge bg-light text-dark">@item.Product?.Name</span>
                                                                @if (item.Quantity > 1)
                                                                {
                                                                    <span class="badge bg-info">ร@item.Quantity</span>
                                                }
                                            </div>
                                                        }
                                                        @if (order.Items.Count > 2)
                                                        {
                                                            <small class="text-muted">+@(order.Items.Count - 2) ููุชุฌุงุช ุฃุฎุฑู</small>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">ูุง ุชูุฌุฏ ููุชุฌุงุช</span>
                                        }
                                    </div>
                                </td>
                                <td class="text-center">
                                                <span class="badge bg-info">@(order.Items?.Sum(i => i.Quantity) ?? 0)</span>
                                </td>
                                <td class="text-center">
                                                <span class="fw-bold text-primary">@order.SubTotal.ToString("N2")</span>
                                </td>
                                <td class="text-center">
                                                @if (order.Discount > 0)
                                    {
                                        <div>
                                                      
                                                        <small class="text-muted text-decoration-line-through">@order.GrandTotal.ToString("N2")</small>
                                                        <div class="fw-bold text-success">@order.SubTotal.ToString("N2")</div>
                                                        <small class="text-danger">ุฎุตู: @order.Discount.ToString("N2")</small>
                                        </div>
                                    }
                                    else
                                    {
                                                    <span class="fw-bold text-success">@order.GrandTotal.ToString("N2")</span>
                                    }
                                </td>
                                <td class="text-center">
                                                <span class="fw-bold text-info">@order.AmountPaid.ToString("N2")</span>
                                </td>
                                <td class="text-center">
                                                @{
                                                    var remaining = order.GrandTotal - order.AmountPaid;
                                                }
                                    @if (remaining > 0)
                                    {
                                        <span class="badge bg-danger">@remaining.ToString("N2")</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">ููุชูู</span>
                                    }
                                </td>
                                <td class="text-center">
                                                @switch (order.OrderOrigin)
                                        {
                                            case PesticideShop.Models.OrderOrigin.Website:
                                                        <span class="badge bg-success"><i class="fas fa-globe"></i> ุงููููุน</span>
                                                break;
                                            case PesticideShop.Models.OrderOrigin.Instagram:
                                                        <span class="badge bg-danger"><i class="fab fa-instagram"></i> ุงูุณุชุฌุฑุงู</span>
                                                break;
                                            case PesticideShop.Models.OrderOrigin.Facebook:
                                                        <span class="badge bg-primary"><i class="fab fa-facebook"></i> ููุณุจูู</span>
                                                break;
                                            case PesticideShop.Models.OrderOrigin.WhatsApp:
                                                        <span class="badge bg-success"><i class="fab fa-whatsapp"></i> ูุงุชุณุงุจ</span>
                                                break;
                                            case PesticideShop.Models.OrderOrigin.Phone:
                                                        <span class="badge bg-warning"><i class="fas fa-phone"></i> ูุงุชู</span>
                                                break;
                                            case PesticideShop.Models.OrderOrigin.WalkIn:
                                                        <span class="badge bg-secondary"><i class="fas fa-walking"></i> ุญุถูุฑ</span>
                                                break;
                                            case PesticideShop.Models.OrderOrigin.PhysicalStore:
                                                        <span class="badge bg-info"><i class="fas fa-store"></i> ูุชุฌุฑ</span>
                                                break;
                                            case PesticideShop.Models.OrderOrigin.Other:
                                                        <span class="badge bg-dark"><i class="fas fa-link"></i> ุฃุฎุฑู</span>
                                                break;
                                            default:
                                                        <span class="badge bg-light text-dark"><i class="fas fa-question-circle"></i> ุบูุฑ ูุญุฏุฏ</span>
                                                break;
                                        }
                                            </td>
                                            <td class="text-center">
                                                @if (order.ShippingType.HasValue)
                                        {
                                                    <span class="badge bg-info">@Html.Raw(GetShippingTypeDisplayName(order.ShippingType))</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td class="text-center">
                                                @switch (order.Status)
                                                {
                                                    case PesticideShop.Models.InvoiceStatus.Draft:
                                                        <span class="badge bg-secondary">ูู ุงูููุชุจ</span>
                                                        break;
                                                    case PesticideShop.Models.InvoiceStatus.Sent:
                                                        <span class="badge bg-warning">ูุฑุณู</span>
                                                        break;
                                                    case PesticideShop.Models.InvoiceStatus.Paid:
                                                        <span class="badge bg-success">ูุฏููุน</span>
                                                        break;
                                                    case PesticideShop.Models.InvoiceStatus.Overdue:
                                                        <span class="badge bg-danger">ูุชุฃุฎุฑ</span>
                                                        break;
                                                    case PesticideShop.Models.InvoiceStatus.Cancelled:
                                                        <span class="badge bg-dark">ููุบู</span>
                                                        break;
                                                    case PesticideShop.Models.InvoiceStatus.PartiallyPaid:
                                                        <span class="badge bg-warning">ูุฏููุน ุฌุฒุฆูุงู</span>
                                                        break;
                                                    case PesticideShop.Models.InvoiceStatus.Pending:
                                                        <span class="badge bg-info">ูุคุฌู</span>
                                                        break;
                                                    case PesticideShop.Models.InvoiceStatus.UnderDelivery:
                                                        <span class="badge bg-primary">ุชุญุช ุงูุชุณููู</span>
                                                        break;
                                                    case PesticideShop.Models.InvoiceStatus.NotDelivered:
                                                        <span class="badge bg-danger">ูู ูุณูู</span>
                                                        break;
                                                    case PesticideShop.Models.InvoiceStatus.Delivered:
                                                        <span class="badge bg-success">ุชู ุงูุชุณููู</span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-light text-dark">ุบูุฑ ูุญุฏุฏ</span>
                                                        break;
                                                }
                                </td>
                                <td class="text-center">
                                                <small class="text-muted">
                                                    @order.InvoiceDate.ToString("dd/MM/yyyy")
                                                    <br>
                                                    @order.InvoiceDate.ToString("hh:mm tt")
                                                </small>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group-vertical btn-group-sm" role="group">
                                                    <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-outline-primary mb-1" title="ุนุฑุถ ุชูุงุตูู ุงูุฃูุฑุฏุฑ ูุงูููุชุฌุงุช">
                                                        <span class="ms-1">ุชูุงุตูู</span>
                                        </a>
                                        @if (remaining > 0)
                                        {
                                                        <a asp-controller="Invoices" asp-action="UpdatePayment" asp-route-id="@order.Id" class="btn btn-sm btn-outline-success mb-1" title="ุชุญุฏูุซ ุงููุนุงููุฉ - ุฅุถุงูุฉ ูุจูุบ ูุฏููุน">
                                                            <span class="ms-1">ุชุญุฏูุซ ุงููุนุงููุฉ</span>
                                            </a>
                                        }
                                                    <form asp-action="Delete" asp-route-id="@order.Id" method="post" class="d-inline" onsubmit="return confirm('ูู ุฃูุช ูุชุฃูุฏ ูู ุญุฐู ุงูุฃูุฑุฏุฑ ุฑูู @order.OrderNumberุ')">
                                                        <button type="submit" class="btn btn-sm btn-outline-danger" title="ุญุฐู ุงูุฃูุฑุฏุฑ">
                                                           
                                                            <span>ุญุฐู</span>
                                                        </button>
                                                    </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                          
                            <h5 class="text-muted">ูุง ุชูุฌุฏ ุฃูุฑุฏุฑุงุช</h5>
                            <p class="text-muted">ูู ูุชู ุฅูุดุงุก ุฃู ุฃูุฑุฏุฑุงุช ุจุนุฏ</p>
                            <a asp-controller="Cashier" asp-action="Index" class="btn btn-primary">
                              
                                ุฅูุดุงุก ุฃูุฑุฏุฑ ุฌุฏูุฏ
                            </a>
                        </div>
                    }
                </div>
                        </div>
                    </div>
                </div>
                        </div>

<!-- Modal ูุญุฐู ุฌููุน ุงูุฃูุฑุฏุฑุงุช -->
<div class="modal fade" id="deleteAllModal" tabindex="-1" aria-labelledby="deleteAllModalLabel" aria-hidden="true" style="z-index: 1055;">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="background: white; border-radius: 10px; box-shadow: 0 10px 30px rgba(0,0,0,0.3);">
            <div class="modal-header bg-danger text-white" style="border-radius: 10px 10px 0 0;">
                <h5 class="modal-title" id="deleteAllModalLabel">
                    <i class="fas fa-exclamation-triangle"></i>
                    ุชุฃููุฏ ุญุฐู ุฌููุน ุงูุฃูุฑุฏุฑุงุช
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
            <div class="modal-body" style="padding: 20px;">
                <div class="alert alert-danger">
                    <h6><i class="fas fa-warning"></i> ุชุญุฐูุฑ!</h6>
                    <p>ูู ุฃูุช ูุชุฃูุฏ ูู ุญุฐู <strong>ุฌููุน ุงูุฃูุฑุฏุฑุงุช</strong>ุ</p>
                    <p class="mb-0">ูุฐุง ุงูุฅุฌุฑุงุก ูุง ูููู ุงูุชุฑุงุฌุน ุนูู ูุณูุชู ุญุฐู ุฌููุน ุงูุจูุงูุงุช ุงููุฑุชุจุทุฉ ุจุงูุฃูุฑุฏุฑุงุช.</p>
                </div>
                <div class="text-center">
                    <p class="text-muted">ุนุฏุฏ ุงูุฃูุฑุฏุฑุงุช: <strong>@Model.Count()</strong></p>
                </div>
            </div>
            <div class="modal-footer" style="border-top: 1px solid #dee2e6; padding: 15px 20px;">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i>
                    ุฅูุบุงุก
                </button>
                <form asp-action="DeleteAll" method="post" class="d-inline">
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i>
                        ุญุฐู ุฌููุน ุงูุฃูุฑุฏุฑุงุช
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .modern-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .header-background {
            background: rgba(255,255,255,0.1);
            backdrop-filter: blur(10px);
        }

        .header-content {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .header-icon {
            font-size: 3rem;
            opacity: 0.8;
        }

        .header-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin: 0;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .header-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
            margin: 0;
        }

        .header-actions .btn {
            border-radius: 25px;
            padding: 12px 30px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            transition: all 0.3s ease;
        }

        .header-actions .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.3);
        }
        
        .table th {
            background-color: #343a40;
            color: white;
            border: none;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.85rem;
        }
        
        .table td {
            vertical-align: middle;
            border-color: #e9ecef;
        }
        
        .table tbody tr:hover {
            background-color: #f8f9fa;
            transform: scale(1.01);
            transition: all 0.2s ease;
        }

        .customer-info {
            min-width: 150px;
        }

        .product-info {
            min-width: 200px;
        }

        .badge {
            font-size: 0.75rem;
            padding: 0.4em 0.6em;
        }

        .btn-group .btn {
            margin: 0 2px;
        }

        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }

        .card-header {
            border-radius: 15px 15px 0 0 !important;
            border: none;
        }

        /* ุชุฎุตูุต ุฃุฒุฑุงุฑ ุงูุญุฐู */
        .btn-outline-danger {
            background-color: #dc3545 !important;
            color: white !important;
            border-color: #dc3545 !important;
        }

        .btn-outline-danger:hover {
            background-color: #c82333 !important;
            color: white !important;
            border-color: #bd2130 !important;
        }

        .btn-danger {
            background-color: #dc3545 !important;
            color: white !important;
            border-color: #dc3545 !important;
        }

        .btn-danger:hover {
            background-color: #c82333 !important;
            color: white !important;
            border-color: #bd2130 !important;
        }

        /* ุถูุงู ุธููุฑ ูุต "ุญุฐู" ุจุดูู ุตุญูุญ */
        .btn-outline-danger span,
        .btn-danger span {
            color: white !important;
            font-weight: 500 !important;
        }

        /* ุชุฎุตูุต ุงูู Modal */
        .modal {
            z-index: 1055 !important;
        }

        .modal-backdrop {
            z-index: 1050 !important;
        }

        .modal-dialog {
            z-index: 1055 !important;
        }

        .modal-content {
            background: white !important;
            border: none !important;
            border-radius: 10px !important;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3) !important;
        }

        .modal-header {
            border-bottom: 1px solid #dee2e6 !important;
            border-radius: 10px 10px 0 0 !important;
        }

        .modal-footer {
            border-top: 1px solid #dee2e6 !important;
            border-radius: 0 0 10px 10px !important;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTable if needed
            if ($.fn.DataTable) {
                $('#ordersTable').DataTable({
                    "language": {
                        "url": "//cdn.datatables.net/plug-ins/1.10.24/i18n/Arabic.json"
                    },
                    "pageLength": 25,
                    "order": [[0, "desc"]],
                    "responsive": true
                });
            }

            // ุถูุงู ุนูู ุงูู Modal ุจุดูู ุตุญูุญ
            $('#deleteAllModal').on('show.bs.modal', function (e) {
                $('body').addClass('modal-open');
            });

            $('#deleteAllModal').on('hidden.bs.modal', function (e) {
                $('body').removeClass('modal-open');
            });
        });

        // Auto-submit on filter change for better UX
        const filterForm = document.getElementById('filterForm');
        if (filterForm) {
            const selectFilters = filterForm.querySelectorAll('select');
            
            selectFilters.forEach(select => {
                select.addEventListener('change', function() {
                    filterForm.submit();
                });
            });
        }
    </script>
}